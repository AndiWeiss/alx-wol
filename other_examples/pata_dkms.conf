PACKAGE_NAME="pata_acpi_test"
PACKAGE_VERSION="1.0"
AUTOINSTALL="yes"
PRE_BUILD="scripts/fetchsources.sh"
#POST_INSTALL="scripts/handleinitrd.sh"
#POST_REMOVE="HandleInitrd.sh"

BUILT_MODULE_NAME[0]="pata_acpi"
BUILT_MODULE_LOCATION[0]="."
DEST_MODULE_NAME[0]="pata_acpi"
DEST_MODULE_LOCATION[0]="/updates"

if [ "${module}" != "" ];
then
	kernel="/boot/vmlinuz-${kernelver}"
	build="${dkms_tree}/${module}/${module_version}/build"

	extract_kversion_string="${source_tree}/${module}-${module_version}/scripts/extract_kversion_string.sh"
	extract_kversion="${source_tree}/${module}-${module_version}/scripts/extract_kversion.sh"
	gcc_used="${source_tree}/${module}-${module_version}/scripts/gcc_used.sh"
	select_gcc="${source_tree}/${module}-${module_version}/scripts/select_gcc.sh"

	temp="${dkms_tree}/${module}/${module_version}/${kernelver}"
	"${extract_kversion_string}" "${kernel}" "${kernel_source_dir}" "${temp}" "${temp}/kernel_version_string"
	"${extract_kversion}" "${temp}/kernel_version_string" "${temp}/kernel_version"
	"${gcc_used}" "${temp}/kernel_version_string" "${temp}/gcc_used"
	if [ -f "${temp}/gcc_used" ];
	then
		gcc_used_version="$(cat "${temp}/gcc_used")"
		gcc_exe="$("${select_gcc}" "${arch}" "${build}" "${gcc_used_version}")"
		if [ $? -eq 0 ];
		then
			rm "${temp}/kernel_version_string"
			MAKE[0]="make -j4 KERNELRELEASE=\"${kernelver}\" -C \"$kernel_source_dir\" M=\"$dkms_tree/$module/$module_version/build\" HOSTCC=\"${gcc_exe}\" CC=\"${gcc_exe}\""
		fi
	fi
fi
